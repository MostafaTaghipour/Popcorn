// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Categories render Categories snapshot 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaView
    onInsetsChange={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onOpen={[Function]}
          onTransitionStart={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 0.01,
                  "restSpeedThreshold": 0.01,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 0.01,
                  "restSpeedThreshold": 0.01,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
                "marginTop": 64,
              }
            }
          >
            <View
              collapsable={false}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                    Object {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <RCTSafeAreaView
                      emulateUnlessSupported={true}
                      style={
                        Object {
                          "alignItems": "center",
                          "flex": 1,
                          "justifyContent": "center",
                        }
                      }
                      testID="mySafe"
                    >
                      <RCTScrollView
                        ItemSeparatorComponent={[Function]}
                        collapsable={false}
                        data={
                          Array [
                            Object {
                              "id": 0,
                              "name": "Drama",
                            },
                            Object {
                              "id": 1,
                              "name": "Action",
                            },
                            Object {
                              "id": 2,
                              "name": "Comedy",
                            },
                          ]
                        }
                        disableVirtualization={false}
                        getItem={[Function]}
                        getItemCount={[Function]}
                        horizontal={false}
                        initialNumToRender={10}
                        keyExtractor={[Function]}
                        maxToRenderPerBatch={10}
                        numColumns={1}
                        onContentSizeChange={[Function]}
                        onEndReachedThreshold={2}
                        onGestureHandlerEvent={[Function]}
                        onGestureHandlerStateChange={[Function]}
                        onLayout={[Function]}
                        onMomentumScrollEnd={[Function]}
                        onScroll={[Function]}
                        onScrollBeginDrag={[Function]}
                        onScrollEndDrag={[Function]}
                        removeClippedSubviews={false}
                        renderItem={[Function]}
                        renderScrollComponent={[Function]}
                        scrollEventThrottle={50}
                        stickyHeaderIndices={Array []}
                        style={
                          Object {
                            "flex": 1,
                            "width": "100%",
                          }
                        }
                        testID="CategoryList"
                        updateCellsBatchingPeriod={50}
                        viewabilityConfigCallbackPairs={Array []}
                        windowSize={21}
                      >
                        <View>
                          <View
                            onLayout={[Function]}
                            style={null}
                          >
                            <View
                              accessible={true}
                              focusable={true}
                              isTVSelectable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Array [
                                  false,
                                  undefined,
                                ]
                              }
                              testID="CategoryItem"
                            >
                              <View
                                style={
                                  Object {
                                    "flexDirection": "row",
                                    "justifyContent": "space-between",
                                    "padding": 16,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Array [
                                      Object {
                                        "color": "#000000",
                                        "fontFamily": "System",
                                        "fontWeight": "400",
                                        "textAlign": "left",
                                      },
                                      Array [
                                        Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "System",
                                          "fontWeight": "500",
                                          "textAlign": "left",
                                          "writingDirection": "ltr",
                                        },
                                        Array [
                                          Object {
                                            "fontSize": 20,
                                            "letterSpacing": 0.15,
                                            "lineHeight": 30,
                                            "marginVertical": 2,
                                          },
                                          undefined,
                                        ],
                                        Array [
                                          Object {
                                            "fontSize": 20,
                                            "letterSpacing": 0.15,
                                            "lineHeight": 30,
                                            "marginVertical": 2,
                                          },
                                          undefined,
                                        ],
                                      ],
                                    ]
                                  }
                                >
                                  Drama
                                </Text>
                                <Text />
                              </View>
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(0, 0, 0, 0.12)",
                                    "height": 0.5,
                                  },
                                  undefined,
                                  undefined,
                                ]
                              }
                            />
                          </View>
                          <View
                            onLayout={[Function]}
                            style={null}
                          >
                            <View
                              accessible={true}
                              focusable={true}
                              isTVSelectable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Array [
                                  false,
                                  undefined,
                                ]
                              }
                              testID="CategoryItem"
                            >
                              <View
                                style={
                                  Object {
                                    "flexDirection": "row",
                                    "justifyContent": "space-between",
                                    "padding": 16,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Array [
                                      Object {
                                        "color": "#000000",
                                        "fontFamily": "System",
                                        "fontWeight": "400",
                                        "textAlign": "left",
                                      },
                                      Array [
                                        Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "System",
                                          "fontWeight": "500",
                                          "textAlign": "left",
                                          "writingDirection": "ltr",
                                        },
                                        Array [
                                          Object {
                                            "fontSize": 20,
                                            "letterSpacing": 0.15,
                                            "lineHeight": 30,
                                            "marginVertical": 2,
                                          },
                                          undefined,
                                        ],
                                        Array [
                                          Object {
                                            "fontSize": 20,
                                            "letterSpacing": 0.15,
                                            "lineHeight": 30,
                                            "marginVertical": 2,
                                          },
                                          undefined,
                                        ],
                                      ],
                                    ]
                                  }
                                >
                                  Action
                                </Text>
                                <Text />
                              </View>
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(0, 0, 0, 0.12)",
                                    "height": 0.5,
                                  },
                                  undefined,
                                  undefined,
                                ]
                              }
                            />
                          </View>
                          <View
                            onLayout={[Function]}
                            style={null}
                          >
                            <View
                              accessible={true}
                              focusable={true}
                              isTVSelectable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Array [
                                  false,
                                  undefined,
                                ]
                              }
                              testID="CategoryItem"
                            >
                              <View
                                style={
                                  Object {
                                    "flexDirection": "row",
                                    "justifyContent": "space-between",
                                    "padding": 16,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Array [
                                      Object {
                                        "color": "#000000",
                                        "fontFamily": "System",
                                        "fontWeight": "400",
                                        "textAlign": "left",
                                      },
                                      Array [
                                        Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": "System",
                                          "fontWeight": "500",
                                          "textAlign": "left",
                                          "writingDirection": "ltr",
                                        },
                                        Array [
                                          Object {
                                            "fontSize": 20,
                                            "letterSpacing": 0.15,
                                            "lineHeight": 30,
                                            "marginVertical": 2,
                                          },
                                          undefined,
                                        ],
                                        Array [
                                          Object {
                                            "fontSize": 20,
                                            "letterSpacing": 0.15,
                                            "lineHeight": 30,
                                            "marginVertical": 2,
                                          },
                                          undefined,
                                        ],
                                      ],
                                    ]
                                  }
                                >
                                  Comedy
                                </Text>
                                <Text />
                              </View>
                            </View>
                          </View>
                        </View>
                      </RCTScrollView>
                    </RCTSafeAreaView>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      pointerEvents="box-none"
      style={
        Object {
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          pointerEvents="none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(224, 224, 224)",
                "flex": 1,
                "shadowColor": "rgb(224, 224, 224)",
                "shadowOffset": Object {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          pointerEvents="box-none"
          style={
            Object {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Object {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  Object {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                MockedScreen
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaView>
</View>
`;
